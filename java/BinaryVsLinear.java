/*
Autor:Alex lema
Lab #6
CSCI 1913
 */

class BinaryVsLinear
{
    private static int linearSearch(int key, int[] array)
    {

        //Part 1.a methods linearSearch//////////////////////////////
        int Count=0;
        for (int index=0; index < array.length; index+=1)
        {
            if (array [index]==key)
            {
                Count=index;
                return Count+1;
            }
        }
        return Count +1;
        ///////////////////////////////////////////////
    }

    private static int binarySearch(int key, int[] array)
    {
        ////Part 1.b methods binarySearch ///////////////////////////
        int left = 0;
        int right = array.length -1;
        int mid;
        int Count = 0;
        while (left <= right)
        {
            mid = (left + right) / 2;
            if (array[mid] < key)
            {
                Count += 1;
                left = mid + 1;
            }
            else if (array[mid] > key)
            {
                Count += 2;
                right = mid - 1;
            }
            else {
                Count += 2;
                 return Count;
            }
        }
        return Count;
        ////////////////////////////////////
    }

    public static void main(String[] args)
    {
        for (int length = 1; length <= 30; length += 1)
        {
            int[] array = new int[length];
            for (int index = 0; index < length; index += 1)
            {
                array[index] = index;
            }

            double linearTotal = 0.0;
            double binaryTotal = 0.0;
            for (int element = 0; element < length; element += 1)
            {
                linearTotal += linearSearch(element, array);
                binaryTotal += binarySearch(element, array);
            }

            double linearAverage = linearTotal / length;
            double binaryAverage = binaryTotal / length;
            System.out.println(length + " " + linearAverage + " " + binaryAverage);
        }
    }
}

/*

/// 2. The output generated by the main method of BinaryVsLinear///////////////

1 1.0 2.0
2 1.5 2.5
3 2.0 3.0
4 2.5 3.25
5 3.0 3.6
6 3.5 3.8333333333333335
7 4.0 4.142857142857143
8 4.5 4.25
9 5.0 4.444444444444445
10 5.5 4.6
11 6.0 4.818181818181818
12 6.5 4.916666666666667
13 7.0 5.076923076923077
14 7.5 5.214285714285714
15 8.0 5.4
16 8.5 5.4375
17 9.0 5.529411764705882
18 9.5 5.611111111111111
19 10.0 5.7368421052631575
20 10.5 5.8
21 11.0 5.904761904761905
22 11.5 6.0
23 12.0 6.130434782608695
24 12.5 6.166666666666667
25 13.0 6.24
26 13.5 6.3076923076923075
27 14.0 6.407407407407407
28 14.5 6.464285714285714
29 15.0 6.551724137931035
30 15.5 6.633333333333334

////////////////////////////////////////

3. The graph is in another document

////////////////////////////////////////

4. A short written answer to this question: Based on your graph, for what array sizes is linear search more efficient than binary search?

Based on the graph and the data, linear search is more efficient than binary search when the array length is less than 8.
When the array size(n) is 7, the average number of comparisons of lineal search (4.0) is less than the average number of comparisons of binary search (4.142857142857143).

//////////////////////////////////////////////////////
5. A short-written answer to this question: Based on your graph, for what array sizes is binary search more efficient than linear search?

Based on the graph and the data, binary search is more efficient than linear search (less comparisons on average) when the array length is greater than or equal to 8.
When the array size is 8, the average number of comparisons of lineal search (4.5) is greater than the average number of comparisons of binary search (4.25).

/////////////////////////////////////////////////////////

*/